syntax = "proto3";

package auth_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/f1xend/auth/pkg/auth_v1;auth_v1";

service UserV1 {
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/auth/v1/create"
      body: "*"
    };
  }

  rpc Get(GetRequest) returns(GetResponse){
    option (google.api.http) = {
      get: "/auth/v1"
    };
  }

  rpc Update(UpdateRequest) returns(google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/auth/v1"
      body: "*"
    };
  }

  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/auth/v1"
    };
  }
}

enum Role {
  user = 0;
  admin = 1;
}

message UserInfo{
  string name = 1 [(validate.rules).string = {
    pattern:   "^[A-Za-z -]+$",
    max_bytes: 256,
  }];
  string email = 2 [(validate.rules).string.email = true];
  string password = 3;
  string password_confirm = 4;
  Role role = 5;
}

message User {
  int64 id = 1;
  UserInfo info = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message UpdateUserInfo {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue email = 2;
}

message CreateRequest {
  UserInfo info = 1;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest{
  int64 id = 1;
}

message GetResponse{
  User user = 1;
}

message UpdateRequest {
  int64 id = 1;
  UpdateUserInfo info = 2;
}

message DeleteRequest {
  int64 id = 1;
}


